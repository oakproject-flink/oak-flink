// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: proto/oak/v1/agent.proto

package oakv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AgentStatus int32

const (
	AgentStatus_AGENT_STATUS_UNKNOWN   AgentStatus = 0
	AgentStatus_AGENT_STATUS_HEALTHY   AgentStatus = 1
	AgentStatus_AGENT_STATUS_DEGRADED  AgentStatus = 2
	AgentStatus_AGENT_STATUS_UNHEALTHY AgentStatus = 3
)

// Enum value maps for AgentStatus.
var (
	AgentStatus_name = map[int32]string{
		0: "AGENT_STATUS_UNKNOWN",
		1: "AGENT_STATUS_HEALTHY",
		2: "AGENT_STATUS_DEGRADED",
		3: "AGENT_STATUS_UNHEALTHY",
	}
	AgentStatus_value = map[string]int32{
		"AGENT_STATUS_UNKNOWN":   0,
		"AGENT_STATUS_HEALTHY":   1,
		"AGENT_STATUS_DEGRADED":  2,
		"AGENT_STATUS_UNHEALTHY": 3,
	}
)

func (x AgentStatus) Enum() *AgentStatus {
	p := new(AgentStatus)
	*p = x
	return p
}

func (x AgentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_oak_v1_agent_proto_enumTypes[0].Descriptor()
}

func (AgentStatus) Type() protoreflect.EnumType {
	return &file_proto_oak_v1_agent_proto_enumTypes[0]
}

func (x AgentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentStatus.Descriptor instead.
func (AgentStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{0}
}

type JobState int32

const (
	JobState_JOB_STATE_UNKNOWN    JobState = 0
	JobState_JOB_STATE_CREATED    JobState = 1
	JobState_JOB_STATE_RUNNING    JobState = 2
	JobState_JOB_STATE_FAILING    JobState = 3
	JobState_JOB_STATE_FAILED     JobState = 4
	JobState_JOB_STATE_CANCELLING JobState = 5
	JobState_JOB_STATE_CANCELED   JobState = 6
	JobState_JOB_STATE_FINISHED   JobState = 7
	JobState_JOB_STATE_RESTARTING JobState = 8
	JobState_JOB_STATE_SUSPENDED  JobState = 9
)

// Enum value maps for JobState.
var (
	JobState_name = map[int32]string{
		0: "JOB_STATE_UNKNOWN",
		1: "JOB_STATE_CREATED",
		2: "JOB_STATE_RUNNING",
		3: "JOB_STATE_FAILING",
		4: "JOB_STATE_FAILED",
		5: "JOB_STATE_CANCELLING",
		6: "JOB_STATE_CANCELED",
		7: "JOB_STATE_FINISHED",
		8: "JOB_STATE_RESTARTING",
		9: "JOB_STATE_SUSPENDED",
	}
	JobState_value = map[string]int32{
		"JOB_STATE_UNKNOWN":    0,
		"JOB_STATE_CREATED":    1,
		"JOB_STATE_RUNNING":    2,
		"JOB_STATE_FAILING":    3,
		"JOB_STATE_FAILED":     4,
		"JOB_STATE_CANCELLING": 5,
		"JOB_STATE_CANCELED":   6,
		"JOB_STATE_FINISHED":   7,
		"JOB_STATE_RESTARTING": 8,
		"JOB_STATE_SUSPENDED":  9,
	}
)

func (x JobState) Enum() *JobState {
	p := new(JobState)
	*p = x
	return p
}

func (x JobState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_oak_v1_agent_proto_enumTypes[1].Descriptor()
}

func (JobState) Type() protoreflect.EnumType {
	return &file_proto_oak_v1_agent_proto_enumTypes[1]
}

func (x JobState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobState.Descriptor instead.
func (JobState) EnumDescriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{1}
}

type EventType int32

const (
	EventType_EVENT_TYPE_UNKNOWN           EventType = 0
	EventType_EVENT_TYPE_JOB_STARTED       EventType = 1
	EventType_EVENT_TYPE_JOB_FAILED        EventType = 2
	EventType_EVENT_TYPE_JOB_RESTARTED     EventType = 3
	EventType_EVENT_TYPE_SCALING_STARTED   EventType = 4
	EventType_EVENT_TYPE_SCALING_COMPLETED EventType = 5
	EventType_EVENT_TYPE_SCALING_FAILED    EventType = 6
	EventType_EVENT_TYPE_SAVEPOINT_CREATED EventType = 7
	EventType_EVENT_TYPE_SAVEPOINT_FAILED  EventType = 8
	EventType_EVENT_TYPE_AGENT_ERROR       EventType = 9
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EVENT_TYPE_UNKNOWN",
		1: "EVENT_TYPE_JOB_STARTED",
		2: "EVENT_TYPE_JOB_FAILED",
		3: "EVENT_TYPE_JOB_RESTARTED",
		4: "EVENT_TYPE_SCALING_STARTED",
		5: "EVENT_TYPE_SCALING_COMPLETED",
		6: "EVENT_TYPE_SCALING_FAILED",
		7: "EVENT_TYPE_SAVEPOINT_CREATED",
		8: "EVENT_TYPE_SAVEPOINT_FAILED",
		9: "EVENT_TYPE_AGENT_ERROR",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNKNOWN":           0,
		"EVENT_TYPE_JOB_STARTED":       1,
		"EVENT_TYPE_JOB_FAILED":        2,
		"EVENT_TYPE_JOB_RESTARTED":     3,
		"EVENT_TYPE_SCALING_STARTED":   4,
		"EVENT_TYPE_SCALING_COMPLETED": 5,
		"EVENT_TYPE_SCALING_FAILED":    6,
		"EVENT_TYPE_SAVEPOINT_CREATED": 7,
		"EVENT_TYPE_SAVEPOINT_FAILED":  8,
		"EVENT_TYPE_AGENT_ERROR":       9,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_oak_v1_agent_proto_enumTypes[2].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_proto_oak_v1_agent_proto_enumTypes[2]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{2}
}

type EventSeverity int32

const (
	EventSeverity_EVENT_SEVERITY_UNKNOWN  EventSeverity = 0
	EventSeverity_EVENT_SEVERITY_INFO     EventSeverity = 1
	EventSeverity_EVENT_SEVERITY_WARNING  EventSeverity = 2
	EventSeverity_EVENT_SEVERITY_ERROR    EventSeverity = 3
	EventSeverity_EVENT_SEVERITY_CRITICAL EventSeverity = 4
)

// Enum value maps for EventSeverity.
var (
	EventSeverity_name = map[int32]string{
		0: "EVENT_SEVERITY_UNKNOWN",
		1: "EVENT_SEVERITY_INFO",
		2: "EVENT_SEVERITY_WARNING",
		3: "EVENT_SEVERITY_ERROR",
		4: "EVENT_SEVERITY_CRITICAL",
	}
	EventSeverity_value = map[string]int32{
		"EVENT_SEVERITY_UNKNOWN":  0,
		"EVENT_SEVERITY_INFO":     1,
		"EVENT_SEVERITY_WARNING":  2,
		"EVENT_SEVERITY_ERROR":    3,
		"EVENT_SEVERITY_CRITICAL": 4,
	}
)

func (x EventSeverity) Enum() *EventSeverity {
	p := new(EventSeverity)
	*p = x
	return p
}

func (x EventSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_oak_v1_agent_proto_enumTypes[3].Descriptor()
}

func (EventSeverity) Type() protoreflect.EnumType {
	return &file_proto_oak_v1_agent_proto_enumTypes[3]
}

func (x EventSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventSeverity.Descriptor instead.
func (EventSeverity) EnumDescriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{3}
}

type StatusResponse_Status int32

const (
	StatusResponse_STATUS_UNKNOWN  StatusResponse_Status = 0
	StatusResponse_STATUS_PENDING  StatusResponse_Status = 1 // Awaiting admin approval
	StatusResponse_STATUS_APPROVED StatusResponse_Status = 2 // Approved, credentials available
	StatusResponse_STATUS_REJECTED StatusResponse_Status = 3 // Rejected by admin
	StatusResponse_STATUS_REVOKED  StatusResponse_Status = 4 // Previously approved, now revoked
)

// Enum value maps for StatusResponse_Status.
var (
	StatusResponse_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "STATUS_PENDING",
		2: "STATUS_APPROVED",
		3: "STATUS_REJECTED",
		4: "STATUS_REVOKED",
	}
	StatusResponse_Status_value = map[string]int32{
		"STATUS_UNKNOWN":  0,
		"STATUS_PENDING":  1,
		"STATUS_APPROVED": 2,
		"STATUS_REJECTED": 3,
		"STATUS_REVOKED":  4,
	}
)

func (x StatusResponse_Status) Enum() *StatusResponse_Status {
	p := new(StatusResponse_Status)
	*p = x
	return p
}

func (x StatusResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_oak_v1_agent_proto_enumTypes[4].Descriptor()
}

func (StatusResponse_Status) Type() protoreflect.EnumType {
	return &file_proto_oak_v1_agent_proto_enumTypes[4]
}

func (x StatusResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusResponse_Status.Descriptor instead.
func (StatusResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{6, 0}
}

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":     0,
		"SERVING":     1,
		"NOT_SERVING": 2,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_oak_v1_agent_proto_enumTypes[5].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_proto_oak_v1_agent_proto_enumTypes[5]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{27, 0}
}

type AgentStatusResponse_ConnectionStatus int32

const (
	AgentStatusResponse_UNKNOWN      AgentStatusResponse_ConnectionStatus = 0
	AgentStatusResponse_CONNECTED    AgentStatusResponse_ConnectionStatus = 1
	AgentStatusResponse_DISCONNECTED AgentStatusResponse_ConnectionStatus = 2
)

// Enum value maps for AgentStatusResponse_ConnectionStatus.
var (
	AgentStatusResponse_ConnectionStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "CONNECTED",
		2: "DISCONNECTED",
	}
	AgentStatusResponse_ConnectionStatus_value = map[string]int32{
		"UNKNOWN":      0,
		"CONNECTED":    1,
		"DISCONNECTED": 2,
	}
)

func (x AgentStatusResponse_ConnectionStatus) Enum() *AgentStatusResponse_ConnectionStatus {
	p := new(AgentStatusResponse_ConnectionStatus)
	*p = x
	return p
}

func (x AgentStatusResponse_ConnectionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentStatusResponse_ConnectionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_oak_v1_agent_proto_enumTypes[6].Descriptor()
}

func (AgentStatusResponse_ConnectionStatus) Type() protoreflect.EnumType {
	return &file_proto_oak_v1_agent_proto_enumTypes[6]
}

func (x AgentStatusResponse_ConnectionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentStatusResponse_ConnectionStatus.Descriptor instead.
func (AgentStatusResponse_ConnectionStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{29, 0}
}

type CredentialsRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ClusterId         string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`                         // Unique, persistent cluster identifier
	ClusterName       string                 `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`                   // Human-readable cluster name
	ApiToken          string                 `protobuf:"bytes,3,opt,name=api_token,json=apiToken,proto3" json:"api_token,omitempty"`                            // Optional: if provided, auto-approve
	AgentVersion      string                 `protobuf:"bytes,4,opt,name=agent_version,json=agentVersion,proto3" json:"agent_version,omitempty"`                // Agent version
	KubernetesVersion string                 `protobuf:"bytes,5,opt,name=kubernetes_version,json=kubernetesVersion,proto3" json:"kubernetes_version,omitempty"` // K8s version
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CredentialsRequest) Reset() {
	*x = CredentialsRequest{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialsRequest) ProtoMessage() {}

func (x *CredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialsRequest.ProtoReflect.Descriptor instead.
func (*CredentialsRequest) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{0}
}

func (x *CredentialsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *CredentialsRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *CredentialsRequest) GetApiToken() string {
	if x != nil {
		return x.ApiToken
	}
	return ""
}

func (x *CredentialsRequest) GetAgentVersion() string {
	if x != nil {
		return x.AgentVersion
	}
	return ""
}

func (x *CredentialsRequest) GetKubernetesVersion() string {
	if x != nil {
		return x.KubernetesVersion
	}
	return ""
}

type CredentialsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Result:
	//
	//	*CredentialsResponse_Approved
	//	*CredentialsResponse_Pending
	//	*CredentialsResponse_Rejected
	Result        isCredentialsResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CredentialsResponse) Reset() {
	*x = CredentialsResponse{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialsResponse) ProtoMessage() {}

func (x *CredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialsResponse.ProtoReflect.Descriptor instead.
func (*CredentialsResponse) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{1}
}

func (x *CredentialsResponse) GetResult() isCredentialsResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CredentialsResponse) GetApproved() *ApprovedCredentials {
	if x != nil {
		if x, ok := x.Result.(*CredentialsResponse_Approved); ok {
			return x.Approved
		}
	}
	return nil
}

func (x *CredentialsResponse) GetPending() *PendingApproval {
	if x != nil {
		if x, ok := x.Result.(*CredentialsResponse_Pending); ok {
			return x.Pending
		}
	}
	return nil
}

func (x *CredentialsResponse) GetRejected() *RejectedRequest {
	if x != nil {
		if x, ok := x.Result.(*CredentialsResponse_Rejected); ok {
			return x.Rejected
		}
	}
	return nil
}

type isCredentialsResponse_Result interface {
	isCredentialsResponse_Result()
}

type CredentialsResponse_Approved struct {
	Approved *ApprovedCredentials `protobuf:"bytes,1,opt,name=approved,proto3,oneof"`
}

type CredentialsResponse_Pending struct {
	Pending *PendingApproval `protobuf:"bytes,2,opt,name=pending,proto3,oneof"`
}

type CredentialsResponse_Rejected struct {
	Rejected *RejectedRequest `protobuf:"bytes,3,opt,name=rejected,proto3,oneof"`
}

func (*CredentialsResponse_Approved) isCredentialsResponse_Result() {}

func (*CredentialsResponse_Pending) isCredentialsResponse_Result() {}

func (*CredentialsResponse_Rejected) isCredentialsResponse_Result() {}

type ApprovedCredentials struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`                     // Server-assigned UUID
	AgentSecret   string                 `protobuf:"bytes,2,opt,name=agent_secret,json=agentSecret,proto3" json:"agent_secret,omitempty"`         // Secret for authentication
	ClientCertPem []byte                 `protobuf:"bytes,3,opt,name=client_cert_pem,json=clientCertPem,proto3" json:"client_cert_pem,omitempty"` // Client certificate for mTLS
	ClientKeyPem  []byte                 `protobuf:"bytes,4,opt,name=client_key_pem,json=clientKeyPem,proto3" json:"client_key_pem,omitempty"`    // Client private key for mTLS
	CaCertPem     []byte                 `protobuf:"bytes,5,opt,name=ca_cert_pem,json=caCertPem,proto3" json:"ca_cert_pem,omitempty"`             // CA certificate to trust server
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApprovedCredentials) Reset() {
	*x = ApprovedCredentials{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApprovedCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovedCredentials) ProtoMessage() {}

func (x *ApprovedCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovedCredentials.ProtoReflect.Descriptor instead.
func (*ApprovedCredentials) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{2}
}

func (x *ApprovedCredentials) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ApprovedCredentials) GetAgentSecret() string {
	if x != nil {
		return x.AgentSecret
	}
	return ""
}

func (x *ApprovedCredentials) GetClientCertPem() []byte {
	if x != nil {
		return x.ClientCertPem
	}
	return nil
}

func (x *ApprovedCredentials) GetClientKeyPem() []byte {
	if x != nil {
		return x.ClientKeyPem
	}
	return nil
}

func (x *ApprovedCredentials) GetCaCertPem() []byte {
	if x != nil {
		return x.CaCertPem
	}
	return nil
}

type PendingApproval struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Message             string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`                                                       // Human-readable message
	PollIntervalSeconds int32                  `protobuf:"varint,2,opt,name=poll_interval_seconds,json=pollIntervalSeconds,proto3" json:"poll_interval_seconds,omitempty"` // How often agent should check back
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PendingApproval) Reset() {
	*x = PendingApproval{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PendingApproval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingApproval) ProtoMessage() {}

func (x *PendingApproval) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingApproval.ProtoReflect.Descriptor instead.
func (*PendingApproval) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{3}
}

func (x *PendingApproval) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PendingApproval) GetPollIntervalSeconds() int32 {
	if x != nil {
		return x.PollIntervalSeconds
	}
	return 0
}

type RejectedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"` // Why the request was rejected
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectedRequest) Reset() {
	*x = RejectedRequest{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectedRequest) ProtoMessage() {}

func (x *RejectedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectedRequest.ProtoReflect.Descriptor instead.
func (*RejectedRequest) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{4}
}

func (x *RejectedRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type StatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterId     string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"` // Cluster ID to check status for
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{5}
}

func (x *StatusRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type StatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        StatusResponse_Status  `protobuf:"varint,1,opt,name=status,proto3,enum=oak.v1.StatusResponse_Status" json:"status,omitempty"`
	Credentials   *ApprovedCredentials   `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"` // Populated if status=APPROVED
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`         // Additional context
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{6}
}

func (x *StatusResponse) GetStatus() StatusResponse_Status {
	if x != nil {
		return x.Status
	}
	return StatusResponse_STATUS_UNKNOWN
}

func (x *StatusResponse) GetCredentials() *ApprovedCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *StatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AgentMessage struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	MessageId string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // Unique message ID for tracking
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*AgentMessage_Registration
	//	*AgentMessage_Heartbeat
	//	*AgentMessage_Metrics
	//	*AgentMessage_Event
	//	*AgentMessage_CommandResult
	Payload       isAgentMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentMessage) Reset() {
	*x = AgentMessage{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMessage) ProtoMessage() {}

func (x *AgentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMessage.ProtoReflect.Descriptor instead.
func (*AgentMessage) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{7}
}

func (x *AgentMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *AgentMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AgentMessage) GetPayload() isAgentMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *AgentMessage) GetRegistration() *AgentRegistration {
	if x != nil {
		if x, ok := x.Payload.(*AgentMessage_Registration); ok {
			return x.Registration
		}
	}
	return nil
}

func (x *AgentMessage) GetHeartbeat() *Heartbeat {
	if x != nil {
		if x, ok := x.Payload.(*AgentMessage_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *AgentMessage) GetMetrics() *MetricsReport {
	if x != nil {
		if x, ok := x.Payload.(*AgentMessage_Metrics); ok {
			return x.Metrics
		}
	}
	return nil
}

func (x *AgentMessage) GetEvent() *EventReport {
	if x != nil {
		if x, ok := x.Payload.(*AgentMessage_Event); ok {
			return x.Event
		}
	}
	return nil
}

func (x *AgentMessage) GetCommandResult() *CommandResult {
	if x != nil {
		if x, ok := x.Payload.(*AgentMessage_CommandResult); ok {
			return x.CommandResult
		}
	}
	return nil
}

type isAgentMessage_Payload interface {
	isAgentMessage_Payload()
}

type AgentMessage_Registration struct {
	Registration *AgentRegistration `protobuf:"bytes,10,opt,name=registration,proto3,oneof"`
}

type AgentMessage_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,11,opt,name=heartbeat,proto3,oneof"`
}

type AgentMessage_Metrics struct {
	Metrics *MetricsReport `protobuf:"bytes,12,opt,name=metrics,proto3,oneof"`
}

type AgentMessage_Event struct {
	Event *EventReport `protobuf:"bytes,13,opt,name=event,proto3,oneof"`
}

type AgentMessage_CommandResult struct {
	CommandResult *CommandResult `protobuf:"bytes,14,opt,name=command_result,json=commandResult,proto3,oneof"`
}

func (*AgentMessage_Registration) isAgentMessage_Payload() {}

func (*AgentMessage_Heartbeat) isAgentMessage_Payload() {}

func (*AgentMessage_Metrics) isAgentMessage_Payload() {}

func (*AgentMessage_Event) isAgentMessage_Payload() {}

func (*AgentMessage_CommandResult) isAgentMessage_Payload() {}

// Agent registration - sent once on connection
type AgentRegistration struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ClusterId         string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`                         // Unique cluster identifier
	ClusterName       string                 `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`                   // Human-readable cluster name
	AgentVersion      string                 `protobuf:"bytes,3,opt,name=agent_version,json=agentVersion,proto3" json:"agent_version,omitempty"`                // Agent version (e.g., "0.1.0")
	KubernetesVersion string                 `protobuf:"bytes,4,opt,name=kubernetes_version,json=kubernetesVersion,proto3" json:"kubernetes_version,omitempty"` // K8s version (e.g., "1.28.0")
	Capabilities      *AgentCapabilities     `protobuf:"bytes,5,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	Labels            map[string]string      `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Custom labels (env=prod, region=us-west)
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AgentRegistration) Reset() {
	*x = AgentRegistration{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentRegistration) ProtoMessage() {}

func (x *AgentRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentRegistration.ProtoReflect.Descriptor instead.
func (*AgentRegistration) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{8}
}

func (x *AgentRegistration) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *AgentRegistration) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *AgentRegistration) GetAgentVersion() string {
	if x != nil {
		return x.AgentVersion
	}
	return ""
}

func (x *AgentRegistration) GetKubernetesVersion() string {
	if x != nil {
		return x.KubernetesVersion
	}
	return ""
}

func (x *AgentRegistration) GetCapabilities() *AgentCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *AgentRegistration) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type AgentCapabilities struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	SupportedFlinkVersions []string               `protobuf:"bytes,1,rep,name=supported_flink_versions,json=supportedFlinkVersions,proto3" json:"supported_flink_versions,omitempty"` // e.g., ["1.18", "1.19", "2.0"]
	SupportsSavepoints     bool                   `protobuf:"varint,2,opt,name=supports_savepoints,json=supportsSavepoints,proto3" json:"supports_savepoints,omitempty"`
	SupportsScaling        bool                   `protobuf:"varint,3,opt,name=supports_scaling,json=supportsScaling,proto3" json:"supports_scaling,omitempty"`
	SupportsJarUpload      bool                   `protobuf:"varint,4,opt,name=supports_jar_upload,json=supportsJarUpload,proto3" json:"supports_jar_upload,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AgentCapabilities) Reset() {
	*x = AgentCapabilities{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCapabilities) ProtoMessage() {}

func (x *AgentCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCapabilities.ProtoReflect.Descriptor instead.
func (*AgentCapabilities) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{9}
}

func (x *AgentCapabilities) GetSupportedFlinkVersions() []string {
	if x != nil {
		return x.SupportedFlinkVersions
	}
	return nil
}

func (x *AgentCapabilities) GetSupportsSavepoints() bool {
	if x != nil {
		return x.SupportsSavepoints
	}
	return false
}

func (x *AgentCapabilities) GetSupportsScaling() bool {
	if x != nil {
		return x.SupportsScaling
	}
	return false
}

func (x *AgentCapabilities) GetSupportsJarUpload() bool {
	if x != nil {
		return x.SupportsJarUpload
	}
	return false
}

// Heartbeat - sent periodically to maintain connection
type Heartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActiveJobs    int32                  `protobuf:"varint,1,opt,name=active_jobs,json=activeJobs,proto3" json:"active_jobs,omitempty"` // Number of active Flink jobs
	Status        AgentStatus            `protobuf:"varint,2,opt,name=status,proto3,enum=oak.v1.AgentStatus" json:"status,omitempty"`   // Agent health status
	Resources     *ResourceUsage         `protobuf:"bytes,3,opt,name=resources,proto3" json:"resources,omitempty"`                      // Cluster resource usage
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{10}
}

func (x *Heartbeat) GetActiveJobs() int32 {
	if x != nil {
		return x.ActiveJobs
	}
	return 0
}

func (x *Heartbeat) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNKNOWN
}

func (x *Heartbeat) GetResources() *ResourceUsage {
	if x != nil {
		return x.Resources
	}
	return nil
}

type ResourceUsage struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CpuUsagePercent    float64                `protobuf:"fixed64,1,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	MemoryUsagePercent float64                `protobuf:"fixed64,2,opt,name=memory_usage_percent,json=memoryUsagePercent,proto3" json:"memory_usage_percent,omitempty"`
	TotalPods          int32                  `protobuf:"varint,3,opt,name=total_pods,json=totalPods,proto3" json:"total_pods,omitempty"`
	RunningPods        int32                  `protobuf:"varint,4,opt,name=running_pods,json=runningPods,proto3" json:"running_pods,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ResourceUsage) Reset() {
	*x = ResourceUsage{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUsage) ProtoMessage() {}

func (x *ResourceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUsage.ProtoReflect.Descriptor instead.
func (*ResourceUsage) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{11}
}

func (x *ResourceUsage) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *ResourceUsage) GetMemoryUsagePercent() float64 {
	if x != nil {
		return x.MemoryUsagePercent
	}
	return 0
}

func (x *ResourceUsage) GetTotalPods() int32 {
	if x != nil {
		return x.TotalPods
	}
	return 0
}

func (x *ResourceUsage) GetRunningPods() int32 {
	if x != nil {
		return x.RunningPods
	}
	return 0
}

// Metrics report - contains metrics for one or more Flink jobs
type MetricsReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jobs          []*JobMetrics          `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsReport) Reset() {
	*x = MetricsReport{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsReport) ProtoMessage() {}

func (x *MetricsReport) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsReport.ProtoReflect.Descriptor instead.
func (*MetricsReport) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{12}
}

func (x *MetricsReport) GetJobs() []*JobMetrics {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type JobMetrics struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	JobId       string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	JobName     string                 `protobuf:"bytes,2,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	State       JobState               `protobuf:"varint,3,opt,name=state,proto3,enum=oak.v1.JobState" json:"state,omitempty"`
	StartTime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Parallelism int32                  `protobuf:"varint,5,opt,name=parallelism,proto3" json:"parallelism,omitempty"`
	// Performance metrics
	RecordsInPerSecond      int64   `protobuf:"varint,10,opt,name=records_in_per_second,json=recordsInPerSecond,proto3" json:"records_in_per_second,omitempty"`
	RecordsOutPerSecond     int64   `protobuf:"varint,11,opt,name=records_out_per_second,json=recordsOutPerSecond,proto3" json:"records_out_per_second,omitempty"`
	BackpressureLevel       float64 `protobuf:"fixed64,12,opt,name=backpressure_level,json=backpressureLevel,proto3" json:"backpressure_level,omitempty"` // 0.0 to 1.0
	CheckpointDurationMs    int64   `protobuf:"varint,13,opt,name=checkpoint_duration_ms,json=checkpointDurationMs,proto3" json:"checkpoint_duration_ms,omitempty"`
	LastCheckpointSizeBytes int64   `protobuf:"varint,14,opt,name=last_checkpoint_size_bytes,json=lastCheckpointSizeBytes,proto3" json:"last_checkpoint_size_bytes,omitempty"`
	// Resource metrics
	CpuUsagePercent  float64 `protobuf:"fixed64,20,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	MemoryUsageBytes int64   `protobuf:"varint,21,opt,name=memory_usage_bytes,json=memoryUsageBytes,proto3" json:"memory_usage_bytes,omitempty"`
	NetworkIoBytes   int64   `protobuf:"varint,22,opt,name=network_io_bytes,json=networkIoBytes,proto3" json:"network_io_bytes,omitempty"`
	// Kafka lag (if applicable)
	KafkaConsumerLag map[string]int64 `protobuf:"bytes,30,rep,name=kafka_consumer_lag,json=kafkaConsumerLag,proto3" json:"kafka_consumer_lag,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // topic -> lag
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *JobMetrics) Reset() {
	*x = JobMetrics{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMetrics) ProtoMessage() {}

func (x *JobMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMetrics.ProtoReflect.Descriptor instead.
func (*JobMetrics) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{13}
}

func (x *JobMetrics) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobMetrics) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *JobMetrics) GetState() JobState {
	if x != nil {
		return x.State
	}
	return JobState_JOB_STATE_UNKNOWN
}

func (x *JobMetrics) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *JobMetrics) GetParallelism() int32 {
	if x != nil {
		return x.Parallelism
	}
	return 0
}

func (x *JobMetrics) GetRecordsInPerSecond() int64 {
	if x != nil {
		return x.RecordsInPerSecond
	}
	return 0
}

func (x *JobMetrics) GetRecordsOutPerSecond() int64 {
	if x != nil {
		return x.RecordsOutPerSecond
	}
	return 0
}

func (x *JobMetrics) GetBackpressureLevel() float64 {
	if x != nil {
		return x.BackpressureLevel
	}
	return 0
}

func (x *JobMetrics) GetCheckpointDurationMs() int64 {
	if x != nil {
		return x.CheckpointDurationMs
	}
	return 0
}

func (x *JobMetrics) GetLastCheckpointSizeBytes() int64 {
	if x != nil {
		return x.LastCheckpointSizeBytes
	}
	return 0
}

func (x *JobMetrics) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *JobMetrics) GetMemoryUsageBytes() int64 {
	if x != nil {
		return x.MemoryUsageBytes
	}
	return 0
}

func (x *JobMetrics) GetNetworkIoBytes() int64 {
	if x != nil {
		return x.NetworkIoBytes
	}
	return 0
}

func (x *JobMetrics) GetKafkaConsumerLag() map[string]int64 {
	if x != nil {
		return x.KafkaConsumerLag
	}
	return nil
}

// Event report - important events from the agent
type EventReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          EventType              `protobuf:"varint,1,opt,name=type,proto3,enum=oak.v1.EventType" json:"type,omitempty"`
	Severity      EventSeverity          `protobuf:"varint,2,opt,name=severity,proto3,enum=oak.v1.EventSeverity" json:"severity,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventReport) Reset() {
	*x = EventReport{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventReport) ProtoMessage() {}

func (x *EventReport) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventReport.ProtoReflect.Descriptor instead.
func (*EventReport) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{14}
}

func (x *EventReport) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_EVENT_TYPE_UNKNOWN
}

func (x *EventReport) GetSeverity() EventSeverity {
	if x != nil {
		return x.Severity
	}
	return EventSeverity_EVENT_SEVERITY_UNKNOWN
}

func (x *EventReport) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EventReport) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EventReport) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Command result - response to server commands
type CommandResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommandId     string                 `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"` // References the command from server
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	ResultData    map[string]string      `protobuf:"bytes,5,rep,name=result_data,json=resultData,proto3" json:"result_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Command-specific results
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandResult) Reset() {
	*x = CommandResult{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResult) ProtoMessage() {}

func (x *CommandResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResult.ProtoReflect.Descriptor instead.
func (*CommandResult) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{15}
}

func (x *CommandResult) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *CommandResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CommandResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommandResult) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *CommandResult) GetResultData() map[string]string {
	if x != nil {
		return x.ResultData
	}
	return nil
}

type ServerMessage struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	MessageId string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ServerMessage_RegistrationAck
	//	*ServerMessage_Command
	//	*ServerMessage_ConfigUpdate
	Payload       isServerMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{16}
}

func (x *ServerMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ServerMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ServerMessage) GetPayload() isServerMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ServerMessage) GetRegistrationAck() *RegistrationAck {
	if x != nil {
		if x, ok := x.Payload.(*ServerMessage_RegistrationAck); ok {
			return x.RegistrationAck
		}
	}
	return nil
}

func (x *ServerMessage) GetCommand() *Command {
	if x != nil {
		if x, ok := x.Payload.(*ServerMessage_Command); ok {
			return x.Command
		}
	}
	return nil
}

func (x *ServerMessage) GetConfigUpdate() *ConfigUpdate {
	if x != nil {
		if x, ok := x.Payload.(*ServerMessage_ConfigUpdate); ok {
			return x.ConfigUpdate
		}
	}
	return nil
}

type isServerMessage_Payload interface {
	isServerMessage_Payload()
}

type ServerMessage_RegistrationAck struct {
	RegistrationAck *RegistrationAck `protobuf:"bytes,10,opt,name=registration_ack,json=registrationAck,proto3,oneof"`
}

type ServerMessage_Command struct {
	Command *Command `protobuf:"bytes,11,opt,name=command,proto3,oneof"`
}

type ServerMessage_ConfigUpdate struct {
	ConfigUpdate *ConfigUpdate `protobuf:"bytes,12,opt,name=config_update,json=configUpdate,proto3,oneof"`
}

func (*ServerMessage_RegistrationAck) isServerMessage_Payload() {}

func (*ServerMessage_Command) isServerMessage_Payload() {}

func (*ServerMessage_ConfigUpdate) isServerMessage_Payload() {}

// Registration acknowledgment
type RegistrationAck struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AgentId        string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"` // Server-assigned agent ID
	WelcomeMessage string                 `protobuf:"bytes,2,opt,name=welcome_message,json=welcomeMessage,proto3" json:"welcome_message,omitempty"`
	ServerTime     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	Config         *AgentConfig           `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RegistrationAck) Reset() {
	*x = RegistrationAck{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistrationAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationAck) ProtoMessage() {}

func (x *RegistrationAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationAck.ProtoReflect.Descriptor instead.
func (*RegistrationAck) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{17}
}

func (x *RegistrationAck) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *RegistrationAck) GetWelcomeMessage() string {
	if x != nil {
		return x.WelcomeMessage
	}
	return ""
}

func (x *RegistrationAck) GetServerTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ServerTime
	}
	return nil
}

func (x *RegistrationAck) GetConfig() *AgentConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type AgentConfig struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	HeartbeatIntervalSeconds int32                  `protobuf:"varint,1,opt,name=heartbeat_interval_seconds,json=heartbeatIntervalSeconds,proto3" json:"heartbeat_interval_seconds,omitempty"` // How often to send heartbeat
	MetricsIntervalSeconds   int32                  `protobuf:"varint,2,opt,name=metrics_interval_seconds,json=metricsIntervalSeconds,proto3" json:"metrics_interval_seconds,omitempty"`       // How often to send metrics
	WatchedNamespaces        []string               `protobuf:"bytes,3,rep,name=watched_namespaces,json=watchedNamespaces,proto3" json:"watched_namespaces,omitempty"`                         // K8s namespaces to monitor
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *AgentConfig) Reset() {
	*x = AgentConfig{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentConfig) ProtoMessage() {}

func (x *AgentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentConfig.ProtoReflect.Descriptor instead.
func (*AgentConfig) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{18}
}

func (x *AgentConfig) GetHeartbeatIntervalSeconds() int32 {
	if x != nil {
		return x.HeartbeatIntervalSeconds
	}
	return 0
}

func (x *AgentConfig) GetMetricsIntervalSeconds() int32 {
	if x != nil {
		return x.MetricsIntervalSeconds
	}
	return 0
}

func (x *AgentConfig) GetWatchedNamespaces() []string {
	if x != nil {
		return x.WatchedNamespaces
	}
	return nil
}

// Command from server to agent
type Command struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	CommandId string                 `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	IssuedAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	// Types that are valid to be assigned to Command:
	//
	//	*Command_ScaleJob
	//	*Command_CreateSavepoint
	//	*Command_CancelJob
	//	*Command_RestartJob
	//	*Command_DeployJob
	Command       isCommand_Command `protobuf_oneof:"command"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{19}
}

func (x *Command) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *Command) GetIssuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedAt
	}
	return nil
}

func (x *Command) GetCommand() isCommand_Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *Command) GetScaleJob() *ScaleJobCommand {
	if x != nil {
		if x, ok := x.Command.(*Command_ScaleJob); ok {
			return x.ScaleJob
		}
	}
	return nil
}

func (x *Command) GetCreateSavepoint() *CreateSavepointCommand {
	if x != nil {
		if x, ok := x.Command.(*Command_CreateSavepoint); ok {
			return x.CreateSavepoint
		}
	}
	return nil
}

func (x *Command) GetCancelJob() *CancelJobCommand {
	if x != nil {
		if x, ok := x.Command.(*Command_CancelJob); ok {
			return x.CancelJob
		}
	}
	return nil
}

func (x *Command) GetRestartJob() *RestartJobCommand {
	if x != nil {
		if x, ok := x.Command.(*Command_RestartJob); ok {
			return x.RestartJob
		}
	}
	return nil
}

func (x *Command) GetDeployJob() *DeployJobCommand {
	if x != nil {
		if x, ok := x.Command.(*Command_DeployJob); ok {
			return x.DeployJob
		}
	}
	return nil
}

type isCommand_Command interface {
	isCommand_Command()
}

type Command_ScaleJob struct {
	ScaleJob *ScaleJobCommand `protobuf:"bytes,10,opt,name=scale_job,json=scaleJob,proto3,oneof"`
}

type Command_CreateSavepoint struct {
	CreateSavepoint *CreateSavepointCommand `protobuf:"bytes,11,opt,name=create_savepoint,json=createSavepoint,proto3,oneof"`
}

type Command_CancelJob struct {
	CancelJob *CancelJobCommand `protobuf:"bytes,12,opt,name=cancel_job,json=cancelJob,proto3,oneof"`
}

type Command_RestartJob struct {
	RestartJob *RestartJobCommand `protobuf:"bytes,13,opt,name=restart_job,json=restartJob,proto3,oneof"`
}

type Command_DeployJob struct {
	DeployJob *DeployJobCommand `protobuf:"bytes,14,opt,name=deploy_job,json=deployJob,proto3,oneof"`
}

func (*Command_ScaleJob) isCommand_Command() {}

func (*Command_CreateSavepoint) isCommand_Command() {}

func (*Command_CancelJob) isCommand_Command() {}

func (*Command_RestartJob) isCommand_Command() {}

func (*Command_DeployJob) isCommand_Command() {}

type ScaleJobCommand struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	JobId           string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	NewParallelism  int32                  `protobuf:"varint,2,opt,name=new_parallelism,json=newParallelism,proto3" json:"new_parallelism,omitempty"`
	CreateSavepoint bool                   `protobuf:"varint,3,opt,name=create_savepoint,json=createSavepoint,proto3" json:"create_savepoint,omitempty"` // Create savepoint before scaling
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ScaleJobCommand) Reset() {
	*x = ScaleJobCommand{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScaleJobCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleJobCommand) ProtoMessage() {}

func (x *ScaleJobCommand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleJobCommand.ProtoReflect.Descriptor instead.
func (*ScaleJobCommand) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{20}
}

func (x *ScaleJobCommand) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ScaleJobCommand) GetNewParallelism() int32 {
	if x != nil {
		return x.NewParallelism
	}
	return 0
}

func (x *ScaleJobCommand) GetCreateSavepoint() bool {
	if x != nil {
		return x.CreateSavepoint
	}
	return false
}

type CreateSavepointCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	SavepointPath string                 `protobuf:"bytes,2,opt,name=savepoint_path,json=savepointPath,proto3" json:"savepoint_path,omitempty"` // Where to store savepoint
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSavepointCommand) Reset() {
	*x = CreateSavepointCommand{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSavepointCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSavepointCommand) ProtoMessage() {}

func (x *CreateSavepointCommand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSavepointCommand.ProtoReflect.Descriptor instead.
func (*CreateSavepointCommand) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{21}
}

func (x *CreateSavepointCommand) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *CreateSavepointCommand) GetSavepointPath() string {
	if x != nil {
		return x.SavepointPath
	}
	return ""
}

type CancelJobCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	WithSavepoint bool                   `protobuf:"varint,2,opt,name=with_savepoint,json=withSavepoint,proto3" json:"with_savepoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelJobCommand) Reset() {
	*x = CancelJobCommand{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelJobCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobCommand) ProtoMessage() {}

func (x *CancelJobCommand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobCommand.ProtoReflect.Descriptor instead.
func (*CancelJobCommand) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{22}
}

func (x *CancelJobCommand) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *CancelJobCommand) GetWithSavepoint() bool {
	if x != nil {
		return x.WithSavepoint
	}
	return false
}

type RestartJobCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	FromSavepoint string                 `protobuf:"bytes,2,opt,name=from_savepoint,json=fromSavepoint,proto3" json:"from_savepoint,omitempty"` // Optional: restore from savepoint
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartJobCommand) Reset() {
	*x = RestartJobCommand{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartJobCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartJobCommand) ProtoMessage() {}

func (x *RestartJobCommand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartJobCommand.ProtoReflect.Descriptor instead.
func (*RestartJobCommand) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{23}
}

func (x *RestartJobCommand) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *RestartJobCommand) GetFromSavepoint() string {
	if x != nil {
		return x.FromSavepoint
	}
	return ""
}

type DeployJobCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobName       string                 `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	JarUrl        string                 `protobuf:"bytes,2,opt,name=jar_url,json=jarUrl,proto3" json:"jar_url,omitempty"` // URL to download JAR
	EntryClass    string                 `protobuf:"bytes,3,opt,name=entry_class,json=entryClass,proto3" json:"entry_class,omitempty"`
	ProgramArgs   []string               `protobuf:"bytes,4,rep,name=program_args,json=programArgs,proto3" json:"program_args,omitempty"`
	Parallelism   int32                  `protobuf:"varint,5,opt,name=parallelism,proto3" json:"parallelism,omitempty"`
	FlinkConfig   map[string]string      `protobuf:"bytes,6,rep,name=flink_config,json=flinkConfig,proto3" json:"flink_config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeployJobCommand) Reset() {
	*x = DeployJobCommand{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployJobCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployJobCommand) ProtoMessage() {}

func (x *DeployJobCommand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployJobCommand.ProtoReflect.Descriptor instead.
func (*DeployJobCommand) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{24}
}

func (x *DeployJobCommand) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *DeployJobCommand) GetJarUrl() string {
	if x != nil {
		return x.JarUrl
	}
	return ""
}

func (x *DeployJobCommand) GetEntryClass() string {
	if x != nil {
		return x.EntryClass
	}
	return ""
}

func (x *DeployJobCommand) GetProgramArgs() []string {
	if x != nil {
		return x.ProgramArgs
	}
	return nil
}

func (x *DeployJobCommand) GetParallelism() int32 {
	if x != nil {
		return x.Parallelism
	}
	return 0
}

func (x *DeployJobCommand) GetFlinkConfig() map[string]string {
	if x != nil {
		return x.FlinkConfig
	}
	return nil
}

// Configuration update
type ConfigUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *AgentConfig           `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigUpdate) Reset() {
	*x = ConfigUpdate{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdate) ProtoMessage() {}

func (x *ConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdate.ProtoReflect.Descriptor instead.
func (*ConfigUpdate) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{25}
}

func (x *ConfigUpdate) GetConfig() *AgentConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{26}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Status        HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=oak.v1.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{27}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

type AgentStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterId     string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"` // Cluster ID to check status for
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentStatusRequest) Reset() {
	*x = AgentStatusRequest{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentStatusRequest) ProtoMessage() {}

func (x *AgentStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentStatusRequest.ProtoReflect.Descriptor instead.
func (*AgentStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{28}
}

func (x *AgentStatusRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type AgentStatusResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Status        AgentStatusResponse_ConnectionStatus `protobuf:"varint,1,opt,name=status,proto3,enum=oak.v1.AgentStatusResponse_ConnectionStatus" json:"status,omitempty"`
	AgentId       string                               `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`                                         // Populated if connected
	LastSeen      *timestamppb.Timestamp               `protobuf:"bytes,3,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`                                      // Last heartbeat time
	HealthStatus  AgentStatus                          `protobuf:"varint,4,opt,name=health_status,json=healthStatus,proto3,enum=oak.v1.AgentStatus" json:"health_status,omitempty"` // Current health status
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentStatusResponse) Reset() {
	*x = AgentStatusResponse{}
	mi := &file_proto_oak_v1_agent_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentStatusResponse) ProtoMessage() {}

func (x *AgentStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_oak_v1_agent_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentStatusResponse.ProtoReflect.Descriptor instead.
func (*AgentStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_oak_v1_agent_proto_rawDescGZIP(), []int{29}
}

func (x *AgentStatusResponse) GetStatus() AgentStatusResponse_ConnectionStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatusResponse_UNKNOWN
}

func (x *AgentStatusResponse) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *AgentStatusResponse) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *AgentStatusResponse) GetHealthStatus() AgentStatus {
	if x != nil {
		return x.HealthStatus
	}
	return AgentStatus_AGENT_STATUS_UNKNOWN
}

var File_proto_oak_v1_agent_proto protoreflect.FileDescriptor

const file_proto_oak_v1_agent_proto_rawDesc = "" +
	"\n" +
	"\x18proto/oak/v1/agent.proto\x12\x06oak.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc7\x01\n" +
	"\x12CredentialsRequest\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12!\n" +
	"\fcluster_name\x18\x02 \x01(\tR\vclusterName\x12\x1b\n" +
	"\tapi_token\x18\x03 \x01(\tR\bapiToken\x12#\n" +
	"\ragent_version\x18\x04 \x01(\tR\fagentVersion\x12-\n" +
	"\x12kubernetes_version\x18\x05 \x01(\tR\x11kubernetesVersion\"\xc6\x01\n" +
	"\x13CredentialsResponse\x129\n" +
	"\bapproved\x18\x01 \x01(\v2\x1b.oak.v1.ApprovedCredentialsH\x00R\bapproved\x123\n" +
	"\apending\x18\x02 \x01(\v2\x17.oak.v1.PendingApprovalH\x00R\apending\x125\n" +
	"\brejected\x18\x03 \x01(\v2\x17.oak.v1.RejectedRequestH\x00R\brejectedB\b\n" +
	"\x06result\"\xc1\x01\n" +
	"\x13ApprovedCredentials\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12!\n" +
	"\fagent_secret\x18\x02 \x01(\tR\vagentSecret\x12&\n" +
	"\x0fclient_cert_pem\x18\x03 \x01(\fR\rclientCertPem\x12$\n" +
	"\x0eclient_key_pem\x18\x04 \x01(\fR\fclientKeyPem\x12\x1e\n" +
	"\vca_cert_pem\x18\x05 \x01(\fR\tcaCertPem\"_\n" +
	"\x0fPendingApproval\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x122\n" +
	"\x15poll_interval_seconds\x18\x02 \x01(\x05R\x13pollIntervalSeconds\")\n" +
	"\x0fRejectedRequest\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\".\n" +
	"\rStatusRequest\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\x90\x02\n" +
	"\x0eStatusResponse\x125\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1d.oak.v1.StatusResponse.StatusR\x06status\x12=\n" +
	"\vcredentials\x18\x02 \x01(\v2\x1b.oak.v1.ApprovedCredentialsR\vcredentials\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"n\n" +
	"\x06Status\x12\x12\n" +
	"\x0eSTATUS_UNKNOWN\x10\x00\x12\x12\n" +
	"\x0eSTATUS_PENDING\x10\x01\x12\x13\n" +
	"\x0fSTATUS_APPROVED\x10\x02\x12\x13\n" +
	"\x0fSTATUS_REJECTED\x10\x03\x12\x12\n" +
	"\x0eSTATUS_REVOKED\x10\x04\"\x86\x03\n" +
	"\fAgentMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12?\n" +
	"\fregistration\x18\n" +
	" \x01(\v2\x19.oak.v1.AgentRegistrationH\x00R\fregistration\x121\n" +
	"\theartbeat\x18\v \x01(\v2\x11.oak.v1.HeartbeatH\x00R\theartbeat\x121\n" +
	"\ametrics\x18\f \x01(\v2\x15.oak.v1.MetricsReportH\x00R\ametrics\x12+\n" +
	"\x05event\x18\r \x01(\v2\x13.oak.v1.EventReportH\x00R\x05event\x12>\n" +
	"\x0ecommand_result\x18\x0e \x01(\v2\x15.oak.v1.CommandResultH\x00R\rcommandResultB\t\n" +
	"\apayload\"\xe2\x02\n" +
	"\x11AgentRegistration\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12!\n" +
	"\fcluster_name\x18\x02 \x01(\tR\vclusterName\x12#\n" +
	"\ragent_version\x18\x03 \x01(\tR\fagentVersion\x12-\n" +
	"\x12kubernetes_version\x18\x04 \x01(\tR\x11kubernetesVersion\x12=\n" +
	"\fcapabilities\x18\x05 \x01(\v2\x19.oak.v1.AgentCapabilitiesR\fcapabilities\x12=\n" +
	"\x06labels\x18\x06 \x03(\v2%.oak.v1.AgentRegistration.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd9\x01\n" +
	"\x11AgentCapabilities\x128\n" +
	"\x18supported_flink_versions\x18\x01 \x03(\tR\x16supportedFlinkVersions\x12/\n" +
	"\x13supports_savepoints\x18\x02 \x01(\bR\x12supportsSavepoints\x12)\n" +
	"\x10supports_scaling\x18\x03 \x01(\bR\x0fsupportsScaling\x12.\n" +
	"\x13supports_jar_upload\x18\x04 \x01(\bR\x11supportsJarUpload\"\x8e\x01\n" +
	"\tHeartbeat\x12\x1f\n" +
	"\vactive_jobs\x18\x01 \x01(\x05R\n" +
	"activeJobs\x12+\n" +
	"\x06status\x18\x02 \x01(\x0e2\x13.oak.v1.AgentStatusR\x06status\x123\n" +
	"\tresources\x18\x03 \x01(\v2\x15.oak.v1.ResourceUsageR\tresources\"\xaf\x01\n" +
	"\rResourceUsage\x12*\n" +
	"\x11cpu_usage_percent\x18\x01 \x01(\x01R\x0fcpuUsagePercent\x120\n" +
	"\x14memory_usage_percent\x18\x02 \x01(\x01R\x12memoryUsagePercent\x12\x1d\n" +
	"\n" +
	"total_pods\x18\x03 \x01(\x05R\ttotalPods\x12!\n" +
	"\frunning_pods\x18\x04 \x01(\x05R\vrunningPods\"7\n" +
	"\rMetricsReport\x12&\n" +
	"\x04jobs\x18\x01 \x03(\v2\x12.oak.v1.JobMetricsR\x04jobs\"\xee\x05\n" +
	"\n" +
	"JobMetrics\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x19\n" +
	"\bjob_name\x18\x02 \x01(\tR\ajobName\x12&\n" +
	"\x05state\x18\x03 \x01(\x0e2\x10.oak.v1.JobStateR\x05state\x129\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12 \n" +
	"\vparallelism\x18\x05 \x01(\x05R\vparallelism\x121\n" +
	"\x15records_in_per_second\x18\n" +
	" \x01(\x03R\x12recordsInPerSecond\x123\n" +
	"\x16records_out_per_second\x18\v \x01(\x03R\x13recordsOutPerSecond\x12-\n" +
	"\x12backpressure_level\x18\f \x01(\x01R\x11backpressureLevel\x124\n" +
	"\x16checkpoint_duration_ms\x18\r \x01(\x03R\x14checkpointDurationMs\x12;\n" +
	"\x1alast_checkpoint_size_bytes\x18\x0e \x01(\x03R\x17lastCheckpointSizeBytes\x12*\n" +
	"\x11cpu_usage_percent\x18\x14 \x01(\x01R\x0fcpuUsagePercent\x12,\n" +
	"\x12memory_usage_bytes\x18\x15 \x01(\x03R\x10memoryUsageBytes\x12(\n" +
	"\x10network_io_bytes\x18\x16 \x01(\x03R\x0enetworkIoBytes\x12V\n" +
	"\x12kafka_consumer_lag\x18\x1e \x03(\v2(.oak.v1.JobMetrics.KafkaConsumerLagEntryR\x10kafkaConsumerLag\x1aC\n" +
	"\x15KafkaConsumerLagEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\x93\x02\n" +
	"\vEventReport\x12%\n" +
	"\x04type\x18\x01 \x01(\x0e2\x11.oak.v1.EventTypeR\x04type\x121\n" +
	"\bseverity\x18\x02 \x01(\x0e2\x15.oak.v1.EventSeverityR\bseverity\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12=\n" +
	"\bmetadata\x18\x05 \x03(\v2!.oak.v1.EventReport.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa8\x02\n" +
	"\rCommandResult\x12\x1d\n" +
	"\n" +
	"command_id\x18\x01 \x01(\tR\tcommandId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12=\n" +
	"\fcompleted_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12F\n" +
	"\vresult_data\x18\x05 \x03(\v2%.oak.v1.CommandResult.ResultDataEntryR\n" +
	"resultData\x1a=\n" +
	"\x0fResultDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa3\x02\n" +
	"\rServerMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12D\n" +
	"\x10registration_ack\x18\n" +
	" \x01(\v2\x17.oak.v1.RegistrationAckH\x00R\x0fregistrationAck\x12+\n" +
	"\acommand\x18\v \x01(\v2\x0f.oak.v1.CommandH\x00R\acommand\x12;\n" +
	"\rconfig_update\x18\f \x01(\v2\x14.oak.v1.ConfigUpdateH\x00R\fconfigUpdateB\t\n" +
	"\apayload\"\xbf\x01\n" +
	"\x0fRegistrationAck\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12'\n" +
	"\x0fwelcome_message\x18\x02 \x01(\tR\x0ewelcomeMessage\x12;\n" +
	"\vserver_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"serverTime\x12+\n" +
	"\x06config\x18\x04 \x01(\v2\x13.oak.v1.AgentConfigR\x06config\"\xb4\x01\n" +
	"\vAgentConfig\x12<\n" +
	"\x1aheartbeat_interval_seconds\x18\x01 \x01(\x05R\x18heartbeatIntervalSeconds\x128\n" +
	"\x18metrics_interval_seconds\x18\x02 \x01(\x05R\x16metricsIntervalSeconds\x12-\n" +
	"\x12watched_namespaces\x18\x03 \x03(\tR\x11watchedNamespaces\"\xa5\x03\n" +
	"\aCommand\x12\x1d\n" +
	"\n" +
	"command_id\x18\x01 \x01(\tR\tcommandId\x127\n" +
	"\tissued_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\bissuedAt\x126\n" +
	"\tscale_job\x18\n" +
	" \x01(\v2\x17.oak.v1.ScaleJobCommandH\x00R\bscaleJob\x12K\n" +
	"\x10create_savepoint\x18\v \x01(\v2\x1e.oak.v1.CreateSavepointCommandH\x00R\x0fcreateSavepoint\x129\n" +
	"\n" +
	"cancel_job\x18\f \x01(\v2\x18.oak.v1.CancelJobCommandH\x00R\tcancelJob\x12<\n" +
	"\vrestart_job\x18\r \x01(\v2\x19.oak.v1.RestartJobCommandH\x00R\n" +
	"restartJob\x129\n" +
	"\n" +
	"deploy_job\x18\x0e \x01(\v2\x18.oak.v1.DeployJobCommandH\x00R\tdeployJobB\t\n" +
	"\acommand\"|\n" +
	"\x0fScaleJobCommand\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12'\n" +
	"\x0fnew_parallelism\x18\x02 \x01(\x05R\x0enewParallelism\x12)\n" +
	"\x10create_savepoint\x18\x03 \x01(\bR\x0fcreateSavepoint\"V\n" +
	"\x16CreateSavepointCommand\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12%\n" +
	"\x0esavepoint_path\x18\x02 \x01(\tR\rsavepointPath\"P\n" +
	"\x10CancelJobCommand\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12%\n" +
	"\x0ewith_savepoint\x18\x02 \x01(\bR\rwithSavepoint\"Q\n" +
	"\x11RestartJobCommand\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12%\n" +
	"\x0efrom_savepoint\x18\x02 \x01(\tR\rfromSavepoint\"\xba\x02\n" +
	"\x10DeployJobCommand\x12\x19\n" +
	"\bjob_name\x18\x01 \x01(\tR\ajobName\x12\x17\n" +
	"\ajar_url\x18\x02 \x01(\tR\x06jarUrl\x12\x1f\n" +
	"\ventry_class\x18\x03 \x01(\tR\n" +
	"entryClass\x12!\n" +
	"\fprogram_args\x18\x04 \x03(\tR\vprogramArgs\x12 \n" +
	"\vparallelism\x18\x05 \x01(\x05R\vparallelism\x12L\n" +
	"\fflink_config\x18\x06 \x03(\v2).oak.v1.DeployJobCommand.FlinkConfigEntryR\vflinkConfig\x1a>\n" +
	"\x10FlinkConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\";\n" +
	"\fConfigUpdate\x12+\n" +
	"\x06config\x18\x01 \x01(\v2\x13.oak.v1.AgentConfigR\x06config\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\x94\x01\n" +
	"\x13HealthCheckResponse\x12A\n" +
	"\x06status\x18\x01 \x01(\x0e2).oak.v1.HealthCheckResponse.ServingStatusR\x06status\":\n" +
	"\rServingStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x02\"3\n" +
	"\x12AgentStatusRequest\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\xab\x02\n" +
	"\x13AgentStatusResponse\x12D\n" +
	"\x06status\x18\x01 \x01(\x0e2,.oak.v1.AgentStatusResponse.ConnectionStatusR\x06status\x12\x19\n" +
	"\bagent_id\x18\x02 \x01(\tR\aagentId\x127\n" +
	"\tlast_seen\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x128\n" +
	"\rhealth_status\x18\x04 \x01(\x0e2\x13.oak.v1.AgentStatusR\fhealthStatus\"@\n" +
	"\x10ConnectionStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\r\n" +
	"\tCONNECTED\x10\x01\x12\x10\n" +
	"\fDISCONNECTED\x10\x02*x\n" +
	"\vAgentStatus\x12\x18\n" +
	"\x14AGENT_STATUS_UNKNOWN\x10\x00\x12\x18\n" +
	"\x14AGENT_STATUS_HEALTHY\x10\x01\x12\x19\n" +
	"\x15AGENT_STATUS_DEGRADED\x10\x02\x12\x1a\n" +
	"\x16AGENT_STATUS_UNHEALTHY\x10\x03*\xf9\x01\n" +
	"\bJobState\x12\x15\n" +
	"\x11JOB_STATE_UNKNOWN\x10\x00\x12\x15\n" +
	"\x11JOB_STATE_CREATED\x10\x01\x12\x15\n" +
	"\x11JOB_STATE_RUNNING\x10\x02\x12\x15\n" +
	"\x11JOB_STATE_FAILING\x10\x03\x12\x14\n" +
	"\x10JOB_STATE_FAILED\x10\x04\x12\x18\n" +
	"\x14JOB_STATE_CANCELLING\x10\x05\x12\x16\n" +
	"\x12JOB_STATE_CANCELED\x10\x06\x12\x16\n" +
	"\x12JOB_STATE_FINISHED\x10\a\x12\x18\n" +
	"\x14JOB_STATE_RESTARTING\x10\b\x12\x17\n" +
	"\x13JOB_STATE_SUSPENDED\x10\t*\xb8\x02\n" +
	"\tEventType\x12\x16\n" +
	"\x12EVENT_TYPE_UNKNOWN\x10\x00\x12\x1a\n" +
	"\x16EVENT_TYPE_JOB_STARTED\x10\x01\x12\x19\n" +
	"\x15EVENT_TYPE_JOB_FAILED\x10\x02\x12\x1c\n" +
	"\x18EVENT_TYPE_JOB_RESTARTED\x10\x03\x12\x1e\n" +
	"\x1aEVENT_TYPE_SCALING_STARTED\x10\x04\x12 \n" +
	"\x1cEVENT_TYPE_SCALING_COMPLETED\x10\x05\x12\x1d\n" +
	"\x19EVENT_TYPE_SCALING_FAILED\x10\x06\x12 \n" +
	"\x1cEVENT_TYPE_SAVEPOINT_CREATED\x10\a\x12\x1f\n" +
	"\x1bEVENT_TYPE_SAVEPOINT_FAILED\x10\b\x12\x1a\n" +
	"\x16EVENT_TYPE_AGENT_ERROR\x10\t*\x97\x01\n" +
	"\rEventSeverity\x12\x1a\n" +
	"\x16EVENT_SEVERITY_UNKNOWN\x10\x00\x12\x17\n" +
	"\x13EVENT_SEVERITY_INFO\x10\x01\x12\x1a\n" +
	"\x16EVENT_SEVERITY_WARNING\x10\x02\x12\x18\n" +
	"\x14EVENT_SEVERITY_ERROR\x10\x03\x12\x1b\n" +
	"\x17EVENT_SEVERITY_CRITICAL\x10\x042\xdf\x01\n" +
	"\n" +
	"OakService\x12>\n" +
	"\vAgentStream\x12\x14.oak.v1.AgentMessage\x1a\x15.oak.v1.ServerMessage(\x010\x01\x12F\n" +
	"\vHealthCheck\x12\x1a.oak.v1.HealthCheckRequest\x1a\x1b.oak.v1.HealthCheckResponse\x12I\n" +
	"\x0eGetAgentStatus\x12\x1a.oak.v1.AgentStatusRequest\x1a\x1b.oak.v1.AgentStatusResponse2\x9e\x01\n" +
	"\x0fAgentManagement\x12M\n" +
	"\x12RequestCredentials\x12\x1a.oak.v1.CredentialsRequest\x1a\x1b.oak.v1.CredentialsResponse\x12<\n" +
	"\vCheckStatus\x12\x15.oak.v1.StatusRequest\x1a\x16.oak.v1.StatusResponseB>Z<github.com/oakproject-flink/oak-flink/api/proto/oak/v1;oakv1b\x06proto3"

var (
	file_proto_oak_v1_agent_proto_rawDescOnce sync.Once
	file_proto_oak_v1_agent_proto_rawDescData []byte
)

func file_proto_oak_v1_agent_proto_rawDescGZIP() []byte {
	file_proto_oak_v1_agent_proto_rawDescOnce.Do(func() {
		file_proto_oak_v1_agent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_oak_v1_agent_proto_rawDesc), len(file_proto_oak_v1_agent_proto_rawDesc)))
	})
	return file_proto_oak_v1_agent_proto_rawDescData
}

var file_proto_oak_v1_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_proto_oak_v1_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_proto_oak_v1_agent_proto_goTypes = []any{
	(AgentStatus)(0),                          // 0: oak.v1.AgentStatus
	(JobState)(0),                             // 1: oak.v1.JobState
	(EventType)(0),                            // 2: oak.v1.EventType
	(EventSeverity)(0),                        // 3: oak.v1.EventSeverity
	(StatusResponse_Status)(0),                // 4: oak.v1.StatusResponse.Status
	(HealthCheckResponse_ServingStatus)(0),    // 5: oak.v1.HealthCheckResponse.ServingStatus
	(AgentStatusResponse_ConnectionStatus)(0), // 6: oak.v1.AgentStatusResponse.ConnectionStatus
	(*CredentialsRequest)(nil),                // 7: oak.v1.CredentialsRequest
	(*CredentialsResponse)(nil),               // 8: oak.v1.CredentialsResponse
	(*ApprovedCredentials)(nil),               // 9: oak.v1.ApprovedCredentials
	(*PendingApproval)(nil),                   // 10: oak.v1.PendingApproval
	(*RejectedRequest)(nil),                   // 11: oak.v1.RejectedRequest
	(*StatusRequest)(nil),                     // 12: oak.v1.StatusRequest
	(*StatusResponse)(nil),                    // 13: oak.v1.StatusResponse
	(*AgentMessage)(nil),                      // 14: oak.v1.AgentMessage
	(*AgentRegistration)(nil),                 // 15: oak.v1.AgentRegistration
	(*AgentCapabilities)(nil),                 // 16: oak.v1.AgentCapabilities
	(*Heartbeat)(nil),                         // 17: oak.v1.Heartbeat
	(*ResourceUsage)(nil),                     // 18: oak.v1.ResourceUsage
	(*MetricsReport)(nil),                     // 19: oak.v1.MetricsReport
	(*JobMetrics)(nil),                        // 20: oak.v1.JobMetrics
	(*EventReport)(nil),                       // 21: oak.v1.EventReport
	(*CommandResult)(nil),                     // 22: oak.v1.CommandResult
	(*ServerMessage)(nil),                     // 23: oak.v1.ServerMessage
	(*RegistrationAck)(nil),                   // 24: oak.v1.RegistrationAck
	(*AgentConfig)(nil),                       // 25: oak.v1.AgentConfig
	(*Command)(nil),                           // 26: oak.v1.Command
	(*ScaleJobCommand)(nil),                   // 27: oak.v1.ScaleJobCommand
	(*CreateSavepointCommand)(nil),            // 28: oak.v1.CreateSavepointCommand
	(*CancelJobCommand)(nil),                  // 29: oak.v1.CancelJobCommand
	(*RestartJobCommand)(nil),                 // 30: oak.v1.RestartJobCommand
	(*DeployJobCommand)(nil),                  // 31: oak.v1.DeployJobCommand
	(*ConfigUpdate)(nil),                      // 32: oak.v1.ConfigUpdate
	(*HealthCheckRequest)(nil),                // 33: oak.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),               // 34: oak.v1.HealthCheckResponse
	(*AgentStatusRequest)(nil),                // 35: oak.v1.AgentStatusRequest
	(*AgentStatusResponse)(nil),               // 36: oak.v1.AgentStatusResponse
	nil,                                       // 37: oak.v1.AgentRegistration.LabelsEntry
	nil,                                       // 38: oak.v1.JobMetrics.KafkaConsumerLagEntry
	nil,                                       // 39: oak.v1.EventReport.MetadataEntry
	nil,                                       // 40: oak.v1.CommandResult.ResultDataEntry
	nil,                                       // 41: oak.v1.DeployJobCommand.FlinkConfigEntry
	(*timestamppb.Timestamp)(nil),             // 42: google.protobuf.Timestamp
}
var file_proto_oak_v1_agent_proto_depIdxs = []int32{
	9,  // 0: oak.v1.CredentialsResponse.approved:type_name -> oak.v1.ApprovedCredentials
	10, // 1: oak.v1.CredentialsResponse.pending:type_name -> oak.v1.PendingApproval
	11, // 2: oak.v1.CredentialsResponse.rejected:type_name -> oak.v1.RejectedRequest
	4,  // 3: oak.v1.StatusResponse.status:type_name -> oak.v1.StatusResponse.Status
	9,  // 4: oak.v1.StatusResponse.credentials:type_name -> oak.v1.ApprovedCredentials
	42, // 5: oak.v1.AgentMessage.timestamp:type_name -> google.protobuf.Timestamp
	15, // 6: oak.v1.AgentMessage.registration:type_name -> oak.v1.AgentRegistration
	17, // 7: oak.v1.AgentMessage.heartbeat:type_name -> oak.v1.Heartbeat
	19, // 8: oak.v1.AgentMessage.metrics:type_name -> oak.v1.MetricsReport
	21, // 9: oak.v1.AgentMessage.event:type_name -> oak.v1.EventReport
	22, // 10: oak.v1.AgentMessage.command_result:type_name -> oak.v1.CommandResult
	16, // 11: oak.v1.AgentRegistration.capabilities:type_name -> oak.v1.AgentCapabilities
	37, // 12: oak.v1.AgentRegistration.labels:type_name -> oak.v1.AgentRegistration.LabelsEntry
	0,  // 13: oak.v1.Heartbeat.status:type_name -> oak.v1.AgentStatus
	18, // 14: oak.v1.Heartbeat.resources:type_name -> oak.v1.ResourceUsage
	20, // 15: oak.v1.MetricsReport.jobs:type_name -> oak.v1.JobMetrics
	1,  // 16: oak.v1.JobMetrics.state:type_name -> oak.v1.JobState
	42, // 17: oak.v1.JobMetrics.start_time:type_name -> google.protobuf.Timestamp
	38, // 18: oak.v1.JobMetrics.kafka_consumer_lag:type_name -> oak.v1.JobMetrics.KafkaConsumerLagEntry
	2,  // 19: oak.v1.EventReport.type:type_name -> oak.v1.EventType
	3,  // 20: oak.v1.EventReport.severity:type_name -> oak.v1.EventSeverity
	39, // 21: oak.v1.EventReport.metadata:type_name -> oak.v1.EventReport.MetadataEntry
	42, // 22: oak.v1.CommandResult.completed_at:type_name -> google.protobuf.Timestamp
	40, // 23: oak.v1.CommandResult.result_data:type_name -> oak.v1.CommandResult.ResultDataEntry
	42, // 24: oak.v1.ServerMessage.timestamp:type_name -> google.protobuf.Timestamp
	24, // 25: oak.v1.ServerMessage.registration_ack:type_name -> oak.v1.RegistrationAck
	26, // 26: oak.v1.ServerMessage.command:type_name -> oak.v1.Command
	32, // 27: oak.v1.ServerMessage.config_update:type_name -> oak.v1.ConfigUpdate
	42, // 28: oak.v1.RegistrationAck.server_time:type_name -> google.protobuf.Timestamp
	25, // 29: oak.v1.RegistrationAck.config:type_name -> oak.v1.AgentConfig
	42, // 30: oak.v1.Command.issued_at:type_name -> google.protobuf.Timestamp
	27, // 31: oak.v1.Command.scale_job:type_name -> oak.v1.ScaleJobCommand
	28, // 32: oak.v1.Command.create_savepoint:type_name -> oak.v1.CreateSavepointCommand
	29, // 33: oak.v1.Command.cancel_job:type_name -> oak.v1.CancelJobCommand
	30, // 34: oak.v1.Command.restart_job:type_name -> oak.v1.RestartJobCommand
	31, // 35: oak.v1.Command.deploy_job:type_name -> oak.v1.DeployJobCommand
	41, // 36: oak.v1.DeployJobCommand.flink_config:type_name -> oak.v1.DeployJobCommand.FlinkConfigEntry
	25, // 37: oak.v1.ConfigUpdate.config:type_name -> oak.v1.AgentConfig
	5,  // 38: oak.v1.HealthCheckResponse.status:type_name -> oak.v1.HealthCheckResponse.ServingStatus
	6,  // 39: oak.v1.AgentStatusResponse.status:type_name -> oak.v1.AgentStatusResponse.ConnectionStatus
	42, // 40: oak.v1.AgentStatusResponse.last_seen:type_name -> google.protobuf.Timestamp
	0,  // 41: oak.v1.AgentStatusResponse.health_status:type_name -> oak.v1.AgentStatus
	14, // 42: oak.v1.OakService.AgentStream:input_type -> oak.v1.AgentMessage
	33, // 43: oak.v1.OakService.HealthCheck:input_type -> oak.v1.HealthCheckRequest
	35, // 44: oak.v1.OakService.GetAgentStatus:input_type -> oak.v1.AgentStatusRequest
	7,  // 45: oak.v1.AgentManagement.RequestCredentials:input_type -> oak.v1.CredentialsRequest
	12, // 46: oak.v1.AgentManagement.CheckStatus:input_type -> oak.v1.StatusRequest
	23, // 47: oak.v1.OakService.AgentStream:output_type -> oak.v1.ServerMessage
	34, // 48: oak.v1.OakService.HealthCheck:output_type -> oak.v1.HealthCheckResponse
	36, // 49: oak.v1.OakService.GetAgentStatus:output_type -> oak.v1.AgentStatusResponse
	8,  // 50: oak.v1.AgentManagement.RequestCredentials:output_type -> oak.v1.CredentialsResponse
	13, // 51: oak.v1.AgentManagement.CheckStatus:output_type -> oak.v1.StatusResponse
	47, // [47:52] is the sub-list for method output_type
	42, // [42:47] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_proto_oak_v1_agent_proto_init() }
func file_proto_oak_v1_agent_proto_init() {
	if File_proto_oak_v1_agent_proto != nil {
		return
	}
	file_proto_oak_v1_agent_proto_msgTypes[1].OneofWrappers = []any{
		(*CredentialsResponse_Approved)(nil),
		(*CredentialsResponse_Pending)(nil),
		(*CredentialsResponse_Rejected)(nil),
	}
	file_proto_oak_v1_agent_proto_msgTypes[7].OneofWrappers = []any{
		(*AgentMessage_Registration)(nil),
		(*AgentMessage_Heartbeat)(nil),
		(*AgentMessage_Metrics)(nil),
		(*AgentMessage_Event)(nil),
		(*AgentMessage_CommandResult)(nil),
	}
	file_proto_oak_v1_agent_proto_msgTypes[16].OneofWrappers = []any{
		(*ServerMessage_RegistrationAck)(nil),
		(*ServerMessage_Command)(nil),
		(*ServerMessage_ConfigUpdate)(nil),
	}
	file_proto_oak_v1_agent_proto_msgTypes[19].OneofWrappers = []any{
		(*Command_ScaleJob)(nil),
		(*Command_CreateSavepoint)(nil),
		(*Command_CancelJob)(nil),
		(*Command_RestartJob)(nil),
		(*Command_DeployJob)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_oak_v1_agent_proto_rawDesc), len(file_proto_oak_v1_agent_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_oak_v1_agent_proto_goTypes,
		DependencyIndexes: file_proto_oak_v1_agent_proto_depIdxs,
		EnumInfos:         file_proto_oak_v1_agent_proto_enumTypes,
		MessageInfos:      file_proto_oak_v1_agent_proto_msgTypes,
	}.Build()
	File_proto_oak_v1_agent_proto = out.File
	file_proto_oak_v1_agent_proto_goTypes = nil
	file_proto_oak_v1_agent_proto_depIdxs = nil
}
